Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:map=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <fragment\n        android:id=\"@+id/map\"\n        android:name=\"com.google.android.gms.maps.SupportMapFragment\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:layout_marginBottom=\"60dp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        map:uiCompass=\"true\"\n        map:uiZoomControls=\"true\"\n        tools:context=\".MapsActivity\"\n        tools:layout_editor_absoluteX=\"24dp\" />\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/floating_button_map_type\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"top|right\"\n        android:layout_margin=\"16dp\"\n        android:layout_marginTop=\"32dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:visibility=\"visible\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/searchLocation\"\n        app:srcCompat=\"@drawable/ic_baseline_map_24\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/map_default\"\n        android:layout_width=\"54dp\"\n        android:layout_height=\"57dp\"\n        android:layout_gravity=\"top|right\"\n        android:layout_margin=\"16dp\"\n        android:layout_marginTop=\"8dp\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintEnd_toStartOf=\"@+id/map_satellite\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/map_terrain\"\n        app:srcCompat=\"@drawable/type_default\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/map_satellite\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"top|right\"\n        android:layout_margin=\"16dp\"\n        android:layout_marginTop=\"68dp\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@id/floating_button_map_type\"\n        app:layout_constraintVertical_bias=\"0.03\"\n        app:srcCompat=\"@drawable/type_satellite\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/map_terrain\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"top|right\"\n        android:layout_margin=\"16dp\"\n        android:layout_marginTop=\"16dp\"\n        android:layout_marginEnd=\"36dp\"\n        android:layout_marginRight=\"36dp\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintEnd_toStartOf=\"@+id/floating_button_map_type\"\n        app:layout_constraintHorizontal_bias=\"0.971\"\n        app:layout_constraintRight_toLeftOf=\"@id/floating_button_map_type\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/searchLocation\"\n        app:srcCompat=\"@drawable/type_terrain\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n    <EditText\n        android:id=\"@+id/searchLocation\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"50dp\"\n        android:layout_marginLeft=\"24dp\"\n        android:layout_marginTop=\"16dp\"\n        android:layout_marginRight=\"24dp\"\n        android:background=\"@drawable/search_bar_background\"\n        android:drawableStart=\"@drawable/ic_baseline_search_24\"\n        android:drawableLeft=\"@drawable/ic_baseline_search_24\"\n        android:hint=\"@string/search\"\n        android:iconifiedByDefault=\"false\"\n        android:maxLines=\"1\"\n        android:paddingLeft=\"15dp\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintRight_toRightOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/btnShare\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"top|right\"\n        android:layout_marginEnd=\"16dp\"\n        android:layout_marginRight=\"16dp\"\n        android:layout_marginBottom=\"108dp\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintBottom_toTopOf=\"@+id/infoLayout\"\n        app:layout_constraintEnd_toEndOf=\"@+id/map\"\n        app:layout_constraintHorizontal_bias=\"1.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:srcCompat=\"@drawable/ic_baseline_share_24\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\n        android:id=\"@+id/btnCorona\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"top|right\"\n        android:layout_marginBottom=\"12dp\"\n        app:backgroundTint=\"#FFFFFF\"\n        app:layout_constraintBottom_toTopOf=\"@+id/btnShare\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.954\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:srcCompat=\"@drawable/ic_baseline_coronavirus_24\"\n        tools:ignore=\"MissingConstraints,VectorDrawableCompat\" />\n\n    <ImageView\n        android:id=\"@+id/btnCurLocation\"\n        android:layout_width=\"60dp\"\n        android:layout_height=\"60dp\"\n        android:layout_marginBottom=\"36dp\"\n        android:background=\"@drawable/current_location_background\"\n        android:src=\"@drawable/ic_baseline_gps_fixed_24\"\n        app:layout_constraintBottom_toTopOf=\"@+id/infoLayout\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.018\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\" />\n\n    <LinearLayout\n        android:id=\"@+id/infoLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:animateLayoutChanges=\"true\"\n        android:background=\"@drawable/info_background\"\n        android:orientation=\"vertical\"\n        android:padding=\"10dp\"\n        android:visibility=\"visible\"\n        app:layout_constraintBottom_toBottomOf=\"@+id/map\"\n        tools:layout_editor_absoluteX=\"0dp\">\n\n        <TextView\n            android:id=\"@+id/namePos\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:text=\"Name of Location\"\n            android:textSize=\"20sp\"\n            android:textStyle=\"bold\" />\n\n        <TextView\n            android:id=\"@+id/address\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Address\"\n            android:textSize=\"14sp\" />\n\n        <TextView\n            android:id=\"@+id/phonePos\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Phone\"\n            android:textSize=\"14sp\" />\n\n        <TextView\n            android:id=\"@+id/price_level\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Price Level: \"\n            android:textSize=\"14sp\" />\n\n        <TextView\n            android:id=\"@+id/rating\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Rating\"\n            android:textSize=\"14sp\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <Button\n                android:id=\"@+id/btnAddFav\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"@drawable/add_fav_background\"\n                android:paddingLeft=\"20dp\"\n                android:paddingRight=\"20dp\"\n                android:text=\"Thêm vào danh sách\"\n                android:textColor=\"#FFFFFF\"\n                android:textSize=\"10sp\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/searchLocation\" />\n\n            <Button\n                android:id=\"@+id/btnFindFromCurrent\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:background=\"@drawable/add_fav_background\"\n                android:paddingLeft=\"20dp\"\n                android:paddingRight=\"20dp\"\n                android:text=\"Hiển thị đường đi\"\n                android:textColor=\"#FFFFFF\"\n                android:textSize=\"10sp\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                app:layout_constraintTop_toBottomOf=\"@+id/searchLocation\" />\n        </LinearLayout>\n    </LinearLayout>\n\n    <com.google.android.material.bottomnavigation.BottomNavigationView\n        android:id=\"@+id/bottom_navigation\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"60dp\"\n        android:background=\"#FFFFFF\"\n        app:layout_constraintTop_toBottomOf=\"@+id/map\"\n        app:menu=\"@menu/bottom_navigation_menu\"\n        tools:layout_editor_absoluteX=\"0dp\">\n\n    </com.google.android.material.bottomnavigation.BottomNavigationView>\n\n    <LinearLayout\n        android:id=\"@+id/llFindPath\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:background=\"@drawable/background_with_shadow\"\n        android:orientation=\"vertical\"\n        android:visibility=\"visible\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"@+id/map\">\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\">\n\n            <HorizontalScrollView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_weight=\"3\"\n                android:scrollbars=\"none\"\n                android:layout_marginRight=\"20dp\"\n                android:layout_marginLeft=\"12dp\">\n\n                <LinearLayout\n                    android:layout_width=\"wrap_content\"\n                    android:layout_height=\"wrap_content\"\n                    android:layout_marginTop=\"3dp\"\n                    android:layout_marginBottom=\"3dp\"\n                    android:gravity=\"center_vertical\"\n                    android:orientation=\"horizontal\">\n\n                    <Button\n                        android:id=\"@+id/btnDrivingMode\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginStart=\"5dp\"\n                        android:layout_marginLeft=\"5dp\"\n                        android:background=\"@drawable/search_bar_background\"\n                        android:drawableLeft=\"@drawable/ic_car_travelmode_24\"\n                        android:paddingLeft=\"10dp\"\n                        android:text=\"Xe\" />\n\n                    <Button\n                        android:id=\"@+id/btnWalkingMode\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginStart=\"7dp\"\n                        android:layout_marginLeft=\"7dp\"\n                        android:background=\"@drawable/search_bar_background\"\n                        android:drawableLeft=\"@drawable/ic_baseline_directions_walk_24\"\n                        android:paddingLeft=\"5dp\"\n                        android:text=\"Đi bộ\" />\n\n                    <Button\n                        android:id=\"@+id/btnTransitMode\"\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"40dp\"\n                        android:layout_marginStart=\"7dp\"\n                        android:layout_marginLeft=\"7dp\"\n                        android:background=\"@drawable/search_bar_background\"\n                        android:drawableLeft=\"@drawable/ic_baseline_directions_bus_24\"\n                        android:paddingLeft=\"10dp\"\n                        android:text=\"Bus\" />\n                </LinearLayout>\n            </HorizontalScrollView>\n\n            <ImageView\n                android:id=\"@+id/ivSetOriginByCurrentPosition\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_weight=\"1\"\n                android:background=\"@drawable/btn_travelmode_background\"\n                android:paddingLeft=\"15dp\"\n                android:paddingTop=\"10dp\"\n                android:paddingRight=\"15dp\"\n                android:paddingBottom=\"10dp\"\n                android:src=\"@drawable/ic_target_48\" />\n        </LinearLayout>\n\n        <EditText\n            android:id=\"@+id/edtOrigin\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"12dp\"\n            android:layout_marginTop=\"15dp\"\n            android:layout_marginRight=\"12dp\"\n            android:background=\"@drawable/search_bar_background\"\n            android:ems=\"10\"\n            android:hint=\"@string/enter_origin_address\"\n            android:inputType=\"textPersonName\"\n            android:padding=\"10dp\" />\n\n        <EditText\n            android:id=\"@+id/edtDestination\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginLeft=\"12dp\"\n            android:layout_marginTop=\"10dp\"\n            android:layout_marginRight=\"12dp\"\n            android:layout_marginBottom=\"10dp\"\n            android:background=\"@drawable/search_bar_background\"\n            android:ems=\"10\"\n            android:hint=\"@string/enter_destination_address\"\n            android:inputType=\"textPersonName\"\n            android:padding=\"10dp\" />\n\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"horizontal\">\n\n            <Button\n                android:id=\"@+id/btnFindPath\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginLeft=\"12dp\"\n                android:layout_marginBottom=\"10dp\"\n                android:background=\"@drawable/add_fav_background\"\n                android:text=\"Tìm\"\n                android:textColor=\"#FFFFFF\" />\n\n            <TextView\n                android:id=\"@+id/tvDuration\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginLeft=\"40dp\"\n                android:layout_weight=\"1\"\n                android:drawableLeft=\"@drawable/ic_baseline_timer_24\"\n                android:gravity=\"center_vertical\"\n                android:text=\"@string/init_second\" />\n\n            <TextView\n                android:id=\"@+id/tvDistance\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"match_parent\"\n                android:layout_marginLeft=\"12dp\"\n                android:layout_weight=\"1\"\n                android:drawableLeft=\"@drawable/ic_car\"\n                android:gravity=\"center_vertical\"\n                android:text=\"@string/init_kilometer\" />\n        </LinearLayout>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/layoutIntro\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"#FFFFFF\"\n        android:visibility=\"visible\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\">\n\n        <androidx.constraintlayout.widget.ConstraintLayout\n            android:id=\"@+id/intro_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:visibility=\"visible\">\n\n            <ImageView\n                android:id=\"@+id/imageView3\"\n                android:layout_width=\"123dp\"\n                android:layout_height=\"112dp\"\n                android:layout_marginBottom=\"408dp\"\n                android:src=\"@drawable/icon\"\n                app:layout_constraintStart_toStartOf=\"parent\"\n                map:layout_constraintBottom_toBottomOf=\"parent\"\n                map:layout_constraintEnd_toEndOf=\"parent\" />\n\n            <com.airbnb.lottie.LottieAnimationView\n                android:layout_width=\"179dp\"\n                android:layout_height=\"81dp\"\n                android:layout_marginBottom=\"128dp\"\n                app:layout_constraintHorizontal_bias=\"0.498\"\n                app:layout_constraintVertical_bias=\"0.038\"\n                map:layout_constraintBottom_toBottomOf=\"parent\"\n                map:layout_constraintEnd_toEndOf=\"parent\"\n                map:layout_constraintStart_toStartOf=\"parent\"\n                map:layout_constraintTop_toBottomOf=\"@+id/imageView3\"\n                map:lottie_autoPlay=\"true\"\n                map:lottie_loop=\"true\"\n                map:lottie_rawRes=\"@raw/loading\" />\n\n        </androidx.constraintlayout.widget.ConstraintLayout>\n    </LinearLayout>\n\n\n    <ImageView\n        android:id=\"@+id/searchVoice\"\n        android:layout_width=\"35dp\"\n        android:layout_height=\"35dp\"\n        android:layout_marginBottom=\"200dp\"\n        android:background=\"@drawable/search_voice_background\"\n        android:src=\"@drawable/ic_baseline_mic_24\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.901\"\n        app:layout_constraintLeft_toLeftOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.044\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(revision fde605448875010d634f0e110d6a36a3177be25a)
+++ app/src/main/res/layout/activity_maps.xml	(date 1606479843000)
@@ -97,7 +97,7 @@
         android:hint="@string/search"
         android:iconifiedByDefault="false"
         android:maxLines="1"
-        android:paddingLeft="15dp"
+        android:paddingLeft="20dp"
         app:layout_constraintHorizontal_bias="0.0"
         app:layout_constraintLeft_toLeftOf="parent"
         app:layout_constraintRight_toRightOf="parent"
@@ -252,15 +252,16 @@
 
         <LinearLayout
             android:layout_width="match_parent"
-            android:layout_height="wrap_content">
+            android:layout_height="wrap_content"
+            android:visibility="visible">
 
             <HorizontalScrollView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:scrollbars="none"
+                android:layout_marginLeft="12dp"
                 android:layout_marginRight="20dp"
-                android:layout_marginLeft="12dp">
+                android:layout_weight="3"
+                android:scrollbars="none">
 
                 <LinearLayout
                     android:layout_width="wrap_content"
@@ -329,7 +330,11 @@
             android:ems="10"
             android:hint="@string/enter_origin_address"
             android:inputType="textPersonName"
-            android:padding="10dp" />
+            android:paddingLeft="20dp"
+            android:paddingTop="10dp"
+            android:paddingRight="10dp"
+            android:paddingBottom="10dp"
+            android:visibility="visible" />
 
         <EditText
             android:id="@+id/edtDestination"
@@ -343,12 +348,17 @@
             android:ems="10"
             android:hint="@string/enter_destination_address"
             android:inputType="textPersonName"
-            android:padding="10dp" />
+            android:paddingLeft="20dp"
+            android:paddingTop="10dp"
+            android:paddingRight="10dp"
+            android:paddingBottom="10dp"
+            android:visibility="visible" />
 
         <LinearLayout
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
-            android:orientation="horizontal">
+            android:orientation="horizontal"
+            android:visibility="visible">
 
             <Button
                 android:id="@+id/btnFindPath"
@@ -434,6 +444,7 @@
         android:layout_marginBottom="200dp"
         android:background="@drawable/search_voice_background"
         android:src="@drawable/ic_baseline_mic_24"
+        android:visibility="visible"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.901"
Index: app/src/main/java/com/example/map_application/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.map_application;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.annotation.RequiresApi;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.content.ContextCompat;\nimport androidx.fragment.app.FragmentActivity;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.app.Activity;\nimport android.app.ProgressDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.pm.PackageManager;\nimport android.graphics.Bitmap;\nimport android.graphics.Canvas;\nimport android.graphics.Color;\nimport android.graphics.drawable.Drawable;\nimport android.hardware.Sensor;\nimport android.hardware.SensorEvent;\nimport android.hardware.SensorEventListener;\nimport android.hardware.SensorManager;\nimport android.location.Location;\nimport android.net.ConnectivityManager;\nimport android.net.NetworkInfo;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.util.ArrayMap;\nimport android.util.DisplayMetrics;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.WindowManager;\nimport android.widget.Adapter;\nimport android.widget.ArrayAdapter;\nimport android.widget.BaseAdapter;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.ListView;\nimport android.widget.PopupMenu;\nimport android.widget.RelativeLayout;\nimport android.widget.SimpleAdapter;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.example.map_application.customtextview.CircularTextView;\nimport com.google.android.gms.location.LocationServices;\nimport com.google.android.gms.maps.CameraUpdateFactory;\nimport com.google.android.gms.maps.GoogleMap;\nimport com.google.android.gms.maps.OnMapReadyCallback;\nimport com.google.android.gms.maps.SupportMapFragment;\nimport com.google.android.gms.maps.model.BitmapDescriptor;\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\nimport com.google.android.gms.maps.model.CameraPosition;\nimport com.google.android.gms.maps.model.LatLng;\nimport com.google.android.gms.maps.model.Marker;\nimport com.google.android.gms.maps.model.MarkerOptions;\nimport com.google.android.gms.maps.model.Polyline;\nimport com.google.android.gms.maps.model.PolylineOptions;\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.android.libraries.places.api.Places;\nimport com.google.android.libraries.places.api.model.Place;\nimport com.google.android.libraries.places.widget.Autocomplete;\nimport com.google.android.libraries.places.widget.model.AutocompleteActivityMode;\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\n\nimport com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;\nimport com.karumi.dexter.Dexter;\nimport com.karumi.dexter.PermissionToken;\nimport com.karumi.dexter.listener.PermissionDeniedResponse;\nimport com.karumi.dexter.listener.PermissionGrantedResponse;\nimport com.karumi.dexter.listener.PermissionRequest;\nimport com.karumi.dexter.listener.single.PermissionListener;\n\nimport org.jetbrains.annotations.NotNull;\n\nimport java.io.UnsupportedEncodingException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport modules.FindPath.DirectionFinder;\nimport modules.FindPath.DirectionFinderListener;\nimport modules.FindPath.Route;\nimport modules.LocationByName.GetPlaceFromText;\nimport modules.LocationByName.GetPlaceInterface;\nimport modules.LocationByName.PlaceObject;\nimport modules.NearBySearch.NearbyLocationSearch;\nimport modules.StoreData.DBManager;\nimport modules.Covid.CovidAPI;\nimport modules.Covid.CovidInterface;\n\nimport static android.R.layout.simple_list_item_2;\n\npublic class MapsActivity extends FragmentActivity implements OnMapReadyCallback\n        , DirectionFinderListener, GetPlaceInterface, CovidInterface, GoogleMap.OnMarkerClickListener, SensorEventListener {\n\n    // Request code for Intent\n    private final int RQCODE_FOR_SEARCH = 2;\n    private final int RQCODE_FROM_FAVORITE = 3;\n    private final int RQCODE_FROM_HISTORY = 4;\n    private final int RQCODE_FOR_FINDORI = 5;\n    private final int RQCODE_FOR_FINDDES = 6;\n    private final int RQCODE_FOR_SEARCH_VIA_VOICE = 7;\n    private final int DEFAULT_MAP_HEIGHT = 17;\n\n    private GoogleMap mMap;\n    ConnectivityManager connectivityManager;\n    private Marker curLocationMarker;\n\n    private SensorManager sensorManager;\n\n    //find path\n    private EditText edtOrigin, edtDestination;\n    private TextView tvDuration, tvDistance;\n    private LinearLayout llFindPath;\n    private List<Polyline> polylinePaths = new ArrayList<>();\n    private Button btnFindPath, btnFindFromCurrent,\n            btnDrivingMode, btnWalkingMode, btnTransitMode;\n    private ImageView ivSetOriginByCurrentPosition;\n    private PopupMenu popupMenu;\n    private boolean isFindingPath;\n    private String travelMode;\n    //---------\n    private Location lastLocation;\n    private LatLng defaultLocation;\n    private EditText searchLocation;\n    private ImageView btnCurLocation;\n    private FloatingActionButton btnShare;\n\n    // MapType Option\n    FloatingActionButton btnSelectType, btnSatellite, btnTerrain, btnDefault;\n    boolean selectedMaptype;\n\n    // Navigation Bar\n    private BottomNavigationView navigation;\n\n    // Location information\n    private LinearLayout informationLocation;\n    private TextView nameLocation, phoneLocation, ratingLocation, addressLocation, priceLevel;\n    private Button btnAddFav;\n    private boolean isGoBack;\n\n    // Data base\n    private DBManager dbManager;\n\n    // Intro\n    private LinearLayout layoutIntro;\n\n    // Search via voice\n    private ImageView searchByVoice;\n\n    // Corona virus\n    FloatingActionButton btnCorona;\n    boolean isCheckingCorona;\n    ProgressDialog progressDialog;\n    ArrayList<String> nameCountry;\n    ArrayList<Integer> casesCountry;\n    ArrayList<Integer> deadCountry;\n    ArrayList<Integer> recoveredCountry;\n    ArrayList<String> latCountry;\n    ArrayList<String> lngCountry;\n\n    ArrayList<String> nameCity;\n    ArrayList<Integer> casesCity;\n    ArrayList<Integer> deadCity;\n    ArrayList<Integer> recoveredCity;\n    ArrayList<String> latCity;\n    ArrayList<String> lngCity;\n    HashMap<String, ArrayList<Object>> hashByCountryCode;\n    ArrayList<String> countryCode;\n\n    // Marker icons array for nearby location search\n    HashMap<String, Integer> markerIcons;\n\n    // Convert a view to bitmap\n    public static Bitmap createDrawableFromView(Context context, View view) {\n        DisplayMetrics displayMetrics = new DisplayMetrics();\n        ((Activity) context).getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n        view.setLayoutParams(new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT));\n        view.measure(displayMetrics.widthPixels, displayMetrics.heightPixels);\n        view.layout(0, 0, displayMetrics.widthPixels, displayMetrics.heightPixels);\n        view.buildDrawingCache();\n        Bitmap bitmap = Bitmap.createBitmap(view.getMeasuredWidth(), view.getMeasuredHeight(), Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        view.draw(canvas);\n\n        return bitmap;\n    }\n\n    @RequiresApi(api = Build.VERSION_CODES.Q)\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_maps);\n\n        connectivityManager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);\n\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\n                .findFragmentById(R.id.map);\n        mapFragment.getMapAsync(this);\n        Places.initialize(getApplicationContext(), getResources().getString(R.string.google_maps_key));\n\n        searchLocation = findViewById(R.id.searchLocation);\n        searchByVoice = findViewById(R.id.searchVoice);\n        searchLocation.setFocusable(false);\n\n        // Tọa độ mặc định của ứng dụng\n        defaultLocation = new LatLng(10.8759, 106.7992);\n        curLocationMarker = null;\n\n        // Thêm find path\n        llFindPath = findViewById(R.id.llFindPath);\n        edtOrigin = findViewById(R.id.edtOrigin);\n        edtOrigin.setFocusable(false);\n        edtDestination = findViewById(R.id.edtDestination);\n        edtDestination.setFocusable(false);\n        tvDistance = findViewById(R.id.tvDistance);\n        tvDuration = findViewById(R.id.tvDuration);\n        btnFindPath = findViewById(R.id.btnFindPath);\n        btnFindFromCurrent = findViewById(R.id.btnFindFromCurrent);\n        isFindingPath = false;\n\n        //Chọn phương thức di chuyển\n        travelMode = \"driving\";\n        btnDrivingMode = findViewById(R.id.btnDrivingMode);\n        btnWalkingMode = findViewById(R.id.btnWalkingMode);\n        btnTransitMode = findViewById(R.id.btnTransitMode);\n        ivSetOriginByCurrentPosition = findViewById(R.id.ivSetOriginByCurrentPosition);\n\n        // Thêm navigation bar\n        navigation = findViewById(R.id.bottom_navigation);\n        navigation.setSelectedItemId(R.id.home);\n        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);\n        popupMenu = new PopupMenu(MapsActivity.this, navigation);\n        popupMenu.getMenuInflater().inflate(R.menu.places_picker_menu, popupMenu.getMenu());\n        popupMenu.setForceShowIcon(true);\n\n        // Component để hiển thị lựa chọn kiểu bản đồ\n        btnSelectType = findViewById(R.id.floating_button_map_type);\n        btnSatellite = findViewById(R.id.map_satellite);\n        btnTerrain = findViewById(R.id.map_terrain);\n        btnDefault = findViewById(R.id.map_default);\n        btnCurLocation = findViewById(R.id.btnCurLocation);\n        btnShare = findViewById(R.id.btnShare);\n\n        // Component để hiển thị thông tin của địa điểm được tìm thấy\n        informationLocation = findViewById(R.id.infoLayout);\n        nameLocation = findViewById(R.id.namePos);\n        phoneLocation = findViewById(R.id.phonePos);\n        ratingLocation = findViewById(R.id.rating);\n        addressLocation = findViewById(R.id.address);\n        priceLevel = findViewById(R.id.price_level);\n        btnAddFav = informationLocation.findViewById(R.id.btnAddFav);\n\n        layoutIntro = findViewById(R.id.layoutIntro);\n        // Corona virus\n        btnCorona = findViewById(R.id.btnCorona);\n        isCheckingCorona = false;\n        nameCountry = new ArrayList<>();\n        casesCountry = new ArrayList<>();\n        deadCountry = new ArrayList<>() ;\n        recoveredCountry = new ArrayList<>();\n        latCountry = new ArrayList<>();\n        lngCountry = new ArrayList<>();\n\n        nameCity = new ArrayList<>();\n        casesCity = new ArrayList<>();\n        deadCity = new ArrayList<>() ;\n        recoveredCity = new ArrayList<>();\n        latCity = new ArrayList<>();\n        lngCity = new ArrayList<>();\n        hashByCountryCode = new HashMap<>();\n        ArrayList<String> countryCode = new ArrayList<>();\n\n        // ẩn ban đầu cho một số view\n        selectedMaptype = false;\n        btnDefault.hide();\n        btnSatellite.hide();\n        btnTerrain.hide();\n        informationLocation.setVisibility(LinearLayout.GONE);\n\n        dbManager = new DBManager(this);\n        navigation.setVisibility(View.GONE);\n        btnShare.setVisibility(View.GONE);\n        btnSelectType.setVisibility(View.GONE);\n        searchByVoice.setVisibility(View.GONE);\n        btnCorona.setVisibility(View.GONE);\n        isGoBack = false;\n\n        sensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n\n        markerIcons = new HashMap<>();\n        markerIcons.put(\"atm\", R.drawable.atm_marker);\n        markerIcons.put(\"cafe\", R.drawable.cafe_marker);\n        markerIcons.put(\"gas_station\", R.drawable.gas_station_marker);\n        markerIcons.put(\"gym\", R.drawable.fitness_center_marker);\n        markerIcons.put(\"restaurant\", R.drawable.restaurant_marker);\n        markerIcons.put(\"school\", R.drawable.school_marker);\n\n        setActionListener();\n    }\n\n    @Override\n    protected void onResume() {\n        super.onResume();\n        if (!isFindingPath) navigation.setSelectedItemId(R.id.home);\n        sensorManager.registerListener(this, sensorManager.getDefaultSensor(Sensor.TYPE_ORIENTATION), SensorManager.SENSOR_DELAY_GAME);\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        sensorManager.unregisterListener(this);\n    }\n\n    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener = new BottomNavigationView.OnNavigationItemSelectedListener() {\n\n        @SuppressLint(\"NonConstantResourceId\")\n        @Override\n        public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n            switch (item.getItemId()) {\n                case R.id.home:\n                    searchLocation.setVisibility(View.VISIBLE);\n\n                    if (isGoBack) {\n                        informationLocation.setVisibility(View.VISIBLE);\n                        isGoBack = false;\n                    }\n\n                    if (isFindingPath) {\n                        searchByVoice.setVisibility(View.VISIBLE);\n                    }\n\n                    llFindPath.setVisibility(View.GONE);\n                    edtOrigin.setText(\"\");\n                    edtDestination.setText(\"\");\n                    tvDistance.setText(R.string.init_kilometer);\n                    tvDuration.setText(R.string.init_second);\n                    isFindingPath = false;\n                    travelMode = \"driving\";\n                    btnDrivingMode.performClick();\n                    llFindPath.setVisibility(View.INVISIBLE);\n                    btnSelectType.setTranslationY(0);\n                    btnDefault.setTranslationY(0);\n                    btnSatellite.setTranslationY(0);\n                    btnTerrain.setTranslationY(0);\n                    return true;\n                case R.id.find:\n                    //llFindPath.animate().translationY(llFindPath.getHeight());\n                    //Hiện thanh tìm kiếm 2 địa điểm\n                    llFindPath.setVisibility(View.VISIBLE);\n                    isCheckingCorona = false;\n                    //Ẩn thanh search location\n                    searchLocation.setVisibility(View.GONE);\n                    searchByVoice.setVisibility(View.GONE);\n                    isFindingPath = true;\n                    //Đưa button select map type xuống\n                    btnSelectType.setTranslationY(llFindPath.getHeight());\n                    btnDefault.setTranslationY(llFindPath.getHeight());\n                    btnSatellite.setTranslationY(llFindPath.getHeight());\n                    btnTerrain.setTranslationY(llFindPath.getHeight());\n                    informationLocation.setVisibility(LinearLayout.GONE);\n                    searchLocation.setText(\"\");\n                    return true;\n                case R.id.place:\n                    searchLocation.setVisibility(View.VISIBLE);\n                    searchByVoice.setVisibility(View.VISIBLE);\n                    llFindPath.setVisibility(View.GONE);\n                    isCheckingCorona = false;\n                    edtOrigin.setText(\"\");\n                    edtDestination.setText(\"\");\n                    tvDistance.setText(R.string.init_kilometer);\n                    tvDuration.setText(R.string.init_second);\n                    if (isFindingPath) {\n                        btnSelectType.setTranslationY(0);\n                        btnDefault.setTranslationY(0);\n                        btnSatellite.setTranslationY(0);\n                        btnTerrain.setTranslationY(0);\n                        isFindingPath = false;\n                    }\n                    popupMenu.show();\n                    informationLocation.setVisibility(LinearLayout.GONE);\n                    searchLocation.setText(\"\");\n                    return true;\n                case R.id.favorite:\n                    isFindingPath = false;\n                    isCheckingCorona = false;\n                    Intent intent_favorite = new Intent(MapsActivity.this, FavoriteActivity.class);\n                    startActivityForResult(intent_favorite, RQCODE_FROM_FAVORITE);\n                    searchLocation.setText(\"\");\n                    return true;\n                case R.id.history:\n                    isFindingPath = false;\n                    isCheckingCorona = false;\n                    Intent intent_history = new Intent(MapsActivity.this, HistoryActivity.class);\n                    startActivityForResult(intent_history, RQCODE_FROM_HISTORY);\n                    searchLocation.setText(\"\");\n                    return true;\n            }\n            return false;\n        }\n    };\n\n    @Override\n    public void onMapReady(GoogleMap googleMap) {\n        mMap = googleMap;\n        mMap.getUiSettings().setCompassEnabled(false);\n        searchByVoice.setVisibility(View.GONE);\n        mMap.getUiSettings().setMapToolbarEnabled(false);\n        getCurrentLocation();\n    }\n\n    // Chuyển màn hình đến vị trí hiện tại của thiết bị\n    private void getCurrentLocation() {\n        Dexter.withActivity(this).withPermission(Manifest.permission.ACCESS_FINE_LOCATION)\n                .withListener(new PermissionListener() {\n                    @Override\n                    public void onPermissionGranted(PermissionGrantedResponse response) {\n                        searchByVoice.setVisibility(View.GONE);\n                        if (ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.ACCESS_FINE_LOCATION)\n                                != PackageManager.PERMISSION_GRANTED) {\n                            return;\n                        }\n                        taskForGetCurLocation();\n                    }\n\n                    @Override\n                    public void onPermissionDenied(PermissionDeniedResponse response) {\n                        searchByVoice.setVisibility(View.GONE);\n                        mMap.addMarker(new MarkerOptions().position(defaultLocation).title(\"Đại học Khoa học tự nhiên - ĐHQG TPHCM\"));\n                        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(defaultLocation, DEFAULT_MAP_HEIGHT)\n                                , new GoogleMap.CancelableCallback() {\n                            @Override\n                            public void onFinish() {\n                                navigation.setVisibility(View.VISIBLE);\n                                btnShare.setVisibility(View.VISIBLE);\n                                btnSelectType.setVisibility(View.VISIBLE);\n                                layoutIntro.setVisibility(View.GONE);\n                                searchByVoice.setVisibility(View.VISIBLE);\n                                if(isFindingPath) searchByVoice.setVisibility(View.GONE);\n                            }\n\n                            @Override\n                            public void onCancel() {\n\n                            }\n                        });\n                    }\n\n                    @Override\n                    public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\n                        token.continuePermissionRequest();\n                    }\n                }).check();\n    }\n\n    private void taskForGetCurLocation() {\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)\n                != PackageManager.PERMISSION_GRANTED) {\n            return;\n        }\n        Task<Location> locationResult = LocationServices.getFusedLocationProviderClient(MapsActivity.this).getLastLocation();\n        locationResult.addOnCompleteListener(new OnCompleteListener<Location>() {\n            @Override\n            public void onComplete(@NonNull Task<Location> task) {\n                if (task.isSuccessful() && task.getResult() != null) {\n                    lastLocation = task.getResult();\n                    LatLng current = new LatLng(lastLocation.getLatitude(), lastLocation.getLongitude());\n                    mMap.clear();\n                    curLocationMarker = mMap.addMarker(new MarkerOptions().position(current)\n                            .icon(BitmapDescriptorFactory.fromResource(R.drawable.current_location))\n                            .anchor(0.5f, 0.5f));\n\n                    mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(current, DEFAULT_MAP_HEIGHT),\n                            new GoogleMap.CancelableCallback() {\n                        @Override\n                        public void onFinish() {\n                            navigation.setVisibility(View.VISIBLE);\n                            btnShare.setVisibility(View.VISIBLE);\n                            btnSelectType.setVisibility(View.VISIBLE);\n                            layoutIntro.setVisibility(View.GONE);\n                            searchByVoice.setVisibility(View.VISIBLE);\n                            btnCorona.setVisibility(View.VISIBLE);\n                            if(isFindingPath) searchByVoice.setVisibility(View.GONE);\n                        }\n\n                        @Override\n                        public void onCancel() {\n\n                        }\n                    });\n                }\n            }\n\n        });\n    }\n\n    private void setActionListener() {\n\n        btnCurLocation.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (informationLocation.getVisibility() == LinearLayout.VISIBLE) {\n                    informationLocation.setVisibility(LinearLayout.GONE);\n                }\n                getCurrentLocation();\n                isCheckingCorona = false;\n            }\n        });\n\n        searchLocation.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                List<Place.Field> fieldList = Arrays.asList(Place.Field.ADDRESS, Place.Field.LAT_LNG, Place.Field.NAME\n                        , Place.Field.RATING, Place.Field.PHONE_NUMBER, Place.Field.PRICE_LEVEL);\n                isCheckingCorona = false;\n                Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.FULLSCREEN, fieldList)\n                        .build(MapsActivity.this);\n                startActivityForResult(intent, RQCODE_FOR_SEARCH);\n            }\n        });\n\n        // Thay đổi MapType\n        btnSelectType.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (selectedMaptype) {\n                    btnDefault.hide();\n                    btnSatellite.hide();\n                    btnTerrain.hide();\n                    selectedMaptype = false;\n                } else {\n                    btnTerrain.show();\n                    btnSatellite.show();\n                    btnDefault.show();\n                    selectedMaptype = true;\n                }\n            }\n        });\n\n        btnDefault.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (mMap.getMapType() != GoogleMap.MAP_TYPE_NORMAL) {\n                    mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL);\n                }\n            }\n        });\n\n        btnSatellite.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (mMap.getMapType() != GoogleMap.MAP_TYPE_SATELLITE) {\n                    mMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);\n                }\n            }\n        });\n\n        btnTerrain.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (mMap.getMapType() != GoogleMap.MAP_TYPE_TERRAIN) {\n                    mMap.setMapType(GoogleMap.MAP_TYPE_TERRAIN);\n                }\n            }\n        });\n\n        edtOrigin.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                List<Place.Field> fieldList = Arrays.asList(Place.Field.ADDRESS, Place.Field.LAT_LNG, Place.Field.NAME\n                        , Place.Field.RATING, Place.Field.PHONE_NUMBER, Place.Field.PRICE_LEVEL);\n                Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.FULLSCREEN, fieldList)\n                        .build(MapsActivity.this);\n                startActivityForResult(intent, RQCODE_FOR_FINDORI);\n            }\n        });\n\n        edtDestination.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                List<Place.Field> fieldList = Arrays.asList(Place.Field.ADDRESS, Place.Field.LAT_LNG, Place.Field.NAME\n                        , Place.Field.RATING, Place.Field.PHONE_NUMBER, Place.Field.PRICE_LEVEL);\n                Intent intent = new Autocomplete.IntentBuilder(AutocompleteActivityMode.FULLSCREEN, fieldList)\n                        .build(MapsActivity.this);\n                startActivityForResult(intent, RQCODE_FOR_FINDDES);\n            }\n        });\n\n        btnShare.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Dexter.withActivity((Activity) v.getContext()).withPermission(Manifest.permission.ACCESS_FINE_LOCATION)\n                        .withListener(new PermissionListener() {\n                            @Override\n                            public void onPermissionGranted(PermissionGrantedResponse response) {\n                                if (ActivityCompat.checkSelfPermission(MapsActivity.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n                                    return;\n                                }\n                                Task<Location> locationResult = LocationServices.getFusedLocationProviderClient(MapsActivity.this).getLastLocation();\n                                locationResult.addOnCompleteListener(new OnCompleteListener<Location>() {\n                                    @Override\n                                    public void onComplete(@NonNull Task<Location> task) {\n                                        if (task.isSuccessful() && task.getResult() != null) {\n                                            lastLocation = task.getResult();\n                                            Intent sharingIntent = new Intent(android.content.Intent.ACTION_SEND);\n                                            sharingIntent.setType(\"text/plain\");\n                                            sharingIntent.putExtra(Intent.EXTRA_TEXT, \"https://maps.google.com?q=\"\n                                                    + lastLocation.getLatitude() + \",\" + lastLocation.getLongitude());\n                                            startActivity(Intent.createChooser(sharingIntent, \"Share via\"));\n                                        }\n                                    }\n\n                                });\n                            }\n\n                            @Override\n                            public void onPermissionDenied(PermissionDeniedResponse response) {\n                                Toast.makeText(getApplicationContext(), \"Yêu cầu truy cập vị trí\", Toast.LENGTH_SHORT).show();\n                            }\n\n                            @Override\n                            public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\n                                token.continuePermissionRequest();\n                            }\n                        }).check();\n            }\n        });\n\n        //send request\n        btnFindPath.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                sendRequest();\n            }\n        });\n\n        btnFindFromCurrent.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Dexter.withActivity((Activity) v.getContext()).withPermission(Manifest.permission.ACCESS_FINE_LOCATION)\n                        .withListener(new PermissionListener() {\n                            @Override\n                            public void onPermissionGranted(PermissionGrantedResponse response) {\n                                if (ActivityCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.ACCESS_FINE_LOCATION)\n                                        != PackageManager.PERMISSION_GRANTED) {\n                                    return;\n                                }\n                                Task<Location> locationResult = LocationServices.getFusedLocationProviderClient(MapsActivity.this).getLastLocation();\n                                locationResult.addOnCompleteListener(new OnCompleteListener<Location>() {\n                                    @Override\n                                    public void onComplete(@NonNull Task<Location> task) {\n                                        if (task.isSuccessful() && task.getResult() != null) {\n                                            lastLocation = task.getResult();\n                                            String origin = \"\" + lastLocation.getLatitude() + \",\" + lastLocation.getLongitude();\n                                            String destination = searchLocation.getText().toString();\n                                            try {\n                                                new DirectionFinder(MapsActivity.this, origin, destination, travelMode).execute();\n                                                informationLocation.setVisibility(View.GONE);\n                                            } catch (UnsupportedEncodingException e) {\n                                                e.printStackTrace();\n                                            }\n                                        }\n                                    }\n\n                                });\n                            }\n\n                            @Override\n                            public void onPermissionDenied(PermissionDeniedResponse response) {\n                                Toast.makeText(getApplicationContext(), \"Yêu cầu truy cập vị trí\", Toast.LENGTH_SHORT).show();\n                            }\n\n                            @Override\n                            public void onPermissionRationaleShouldBeShown(PermissionRequest permission, PermissionToken token) {\n                                token.continuePermissionRequest();\n                            }\n                        }).check();\n            }\n        });\n\n        popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\n            @SuppressLint(\"NonConstantResourceId\")\n            @Override\n            public boolean onMenuItemClick(MenuItem item) {\n                if (lastLocation != null) {\n                    String type = \"\";\n                    LatLng current = new LatLng(lastLocation.getLatitude(), lastLocation.getLongitude());\n                    mMap.clear();\n                    curLocationMarker = mMap.addMarker(new MarkerOptions().position(current)\n                            .icon(BitmapDescriptorFactory.fromResource(R.drawable.current_location))\n                            .anchor(0.5f, 0.5f));\n                    \n                    switch (item.getItemId()) {\n                        case R.id.menuATM:\n                            type = \"atm\";\n                            break;\n                        case R.id.menuCafe:\n                            type = \"cafe\";\n                            break;\n                        case R.id.menuGasStation:\n                            type = \"gas_station\";\n                            break;\n                        case R.id.menuGym:\n                            type = \"gym\";\n                            break;\n                        case R.id.menuRestaurant:\n                            type = \"restaurant\";\n                            break;\n                        case R.id.menuSchool:\n                            type = \"school\";\n                            break;\n                    }\n\n                    connectivityManager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);\n                    if(connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() != NetworkInfo.State.CONNECTED &&\n                            connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() != NetworkInfo.State.CONNECTED) {\n                        Toast.makeText(MapsActivity.this, \"Please turn on the Internet !\", Toast.LENGTH_SHORT).show();\n                        return false;\n                    }\n                    else\n                    {\n                        NearbyLocationSearch searcher = new NearbyLocationSearch(getApplicationContext(),\n                                lastLocation.getLatitude(), lastLocation.getLongitude(), type,\n                                bitmapDescriptorFromVector(MapsActivity.this, markerIcons.get(type)));\n                        searcher.execute(mMap);\n                    }\n                    return true;\n                }\n                return false;\n            }\n        });\n\n        searchByVoice.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                Intent intent = new Intent(\"android.speech.action.RECOGNIZE_SPEECH\");\n                intent.putExtra(\"android.speech.extra.LANGUAGE_MODEL\", \"free_form\");\n                intent.putExtra(\"android.speech.extra.PROMPT\", \"Speak Now\");\n                startActivityForResult(intent, RQCODE_FOR_SEARCH_VIA_VOICE);\n            }\n        });\n\n        btnCorona.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n\n                connectivityManager = (ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);\n                if(connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_MOBILE).getState() != NetworkInfo.State.CONNECTED &&\n                        connectivityManager.getNetworkInfo(ConnectivityManager.TYPE_WIFI).getState() != NetworkInfo.State.CONNECTED) {\n                    Toast.makeText(MapsActivity.this, \"Please turn on the Internet !\", Toast.LENGTH_SHORT).show();\n                }\n                else\n                {\n                    progressDialog = new ProgressDialog(MapsActivity.this);\n                    progressDialog.show();\n                    progressDialog.setContentView(R.layout.progress_dialog);\n                    getWindow().setFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE,\n                            WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\n                    new CovidAPI(MapsActivity.this).execute();\n                }\n            }\n        });\n\n        //Event click thay đổi travel mode (mặc định là tìm đường đi theo xe)\n        btnDrivingMode.setOnClickListener(new View.OnClickListener() {\n            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n            @Override\n            public void onClick(View v) {\n                tvDistance.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_car_travelmode_clicked, 0, 0,0);\n                btnDrivingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_car_travelmode_clicked, 0, 0, 0);\n                btnWalkingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_walk_24, 0, 0,0);\n                btnTransitMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_bus_24, 0, 0,0);\n                btnDrivingMode.setTextColor(Color.parseColor(\"#FF6D00\"));\n                btnWalkingMode.setTextColor(Color.parseColor(\"#8a000000\"));\n                btnTransitMode.setTextColor(Color.parseColor(\"#8a000000\"));\n\n                //Nếu đang là driving thì thoát\n                if (travelMode.equals(\"driving\")) return;\n                travelMode = \"driving\";\n                if (!edtOrigin.getText().toString().isEmpty() && !edtDestination.getText().toString().isEmpty()) sendRequest();\n            }\n        });\n\n        btnWalkingMode.setOnClickListener(new View.OnClickListener() {\n            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n            @Override\n            public void onClick(View v) {\n                tvDistance.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_walk_24_clicked, 0, 0,0);\n                btnDrivingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_car_travelmode_24, 0, 0, 0);\n                btnWalkingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_walk_24_clicked, 0, 0,0);\n                btnTransitMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_bus_24, 0, 0,0);\n                btnDrivingMode.setTextColor(Color.parseColor(\"#8a000000\"));\n                btnWalkingMode.setTextColor(Color.parseColor(\"#FF6D00\"));\n                btnTransitMode.setTextColor(Color.parseColor(\"#8a000000\"));\n\n                if (travelMode.equals(\"walking\")) return;\n                travelMode = \"walking\";\n                if (!edtOrigin.getText().toString().isEmpty() && !edtDestination.getText().toString().isEmpty()) sendRequest();\n            }\n        });\n\n        btnTransitMode.setOnClickListener(new View.OnClickListener() {\n            @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)\n            @Override\n            public void onClick(View v) {\n                tvDistance.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_bus_24_clicked, 0, 0,0);\n                btnDrivingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_car_travelmode_24, 0, 0, 0);\n                btnWalkingMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_walk_24, 0, 0,0);\n                btnTransitMode.setCompoundDrawablesRelativeWithIntrinsicBounds(R.drawable.ic_baseline_directions_bus_24_clicked, 0, 0,0);\n                btnDrivingMode.setTextColor(Color.parseColor(\"#8a000000\"));\n                btnWalkingMode.setTextColor(Color.parseColor(\"#8a000000\"));\n                btnTransitMode.setTextColor(Color.parseColor(\"#FF6D00\"));\n\n                if (travelMode.equals(\"transit\")) return;\n                travelMode = \"transit\";\n                if (!edtOrigin.getText().toString().isEmpty() && !edtDestination.getText().toString().isEmpty()) sendRequest();\n            }\n        });\n\n        //Hiển thị tọa độ vị trí hiện tại ở ô edit text origin\n        ivSetOriginByCurrentPosition.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                getCurrentLocation();\n                String temp = String.valueOf(lastLocation.getLatitude()) + \", \"\n                        + String.valueOf(lastLocation.getLongitude());\n                edtOrigin.setText(temp);\n                searchByVoice.setVisibility(View.GONE);\n            }\n        });\n    }\n\n    //đổi icon từ định dạng vector sang bitmap\n    private BitmapDescriptor bitmapDescriptorFromVector(Context context, int vectorResId) {\n        Drawable vectorDrawable = ContextCompat.getDrawable(context, vectorResId);\n        vectorDrawable.setBounds(0, 0, vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight());\n        Bitmap bitmap = Bitmap.createBitmap(vectorDrawable.getIntrinsicWidth(), vectorDrawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);\n        Canvas canvas = new Canvas(bitmap);\n        vectorDrawable.draw(canvas);\n        return BitmapDescriptorFactory.fromBitmap(bitmap);\n    }\n\n    //Find path-----------\n    @Override\n    public void onDirectionFinderStart() {\n        //Xóa polyline cũ\n        if (polylinePaths != null) {\n            for (Polyline polyline : polylinePaths) {\n                polyline.remove();\n            }\n        }\n    }\n\n    @Override\n    public void onDirectionFinderSuccess(List<Route> routes) {\n        //Cấp phát cho polyline (tập hợp các điểm trên đường đi)\n        polylinePaths = new ArrayList<>();\n\n        // Không tìm được routes từ google cấp\n        if (routes.size() == 0) return;\n\n        for (Route route : routes) {\n            //Xóa các marker trên bản đồ\n            mMap.clear();\n            //Chuyển camera tới vị trí bắt đầu\n            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(route.startLocation, DEFAULT_MAP_HEIGHT));\n\n            //Ghi thời gian, khoảng cách vào 2 ô textview duration, distance\n            tvDuration.setText(route.duration.text);\n            tvDistance.setText(route.distance.text);\n\n            //add marker điểm đầu, điểm cuối lên mMap\n            mMap.addMarker(new MarkerOptions()\n                    .icon(bitmapDescriptorFromVector(MapsActivity.this, R.drawable.ic_position_start))\n                    .title(route.startAddress)\n                    .position(route.startLocation));\n            mMap.addMarker(new MarkerOptions()\n                    .title(route.endAddress)\n                    .position(route.endLocation));\n\n            //Tạo 1 polyline\n            PolylineOptions polylineOptions = new PolylineOptions().\n                    geodesic(true).\n                    color(ContextCompat.getColor(getApplicationContext(), R.color.colorRoadRoute)).\n                    width(15);\n\n            //Thêm các điểm vào polylineOptions\n            for (int i = 0; i < route.points.size(); i++)\n                polylineOptions.add(route.points.get(i));\n            //vẽ đường đi giữa 2 điểm\n            polylinePaths.add(mMap.addPolyline(polylineOptions));\n        }\n    }\n\n    private void sendRequest() {\n        String origin = edtOrigin.getText().toString();\n        String destination = edtDestination.getText().toString();\n        if (origin.isEmpty()) {\n            Toast.makeText(this, \"Please enter origin address!\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n        if (destination.isEmpty()) {\n            Toast.makeText(this, \"Please enter destination address!\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        try {\n            // Tìm đường dựa vào address điểm đầu, cuối\n            new DirectionFinder(this, origin, destination, travelMode).execute();\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n    }\n    //-----------------------------------------------------------\n\n    private void showPlaceInformation(@NotNull Place place) {\n        searchLocation.setText(place.getAddress());\n        nameLocation.setText(place.getName());\n        addressLocation.setText(place.getAddress());\n        // check phone number\n        if (place.getPhoneNumber() != null) {\n            phoneLocation.setText(\"Phone number: \" + place.getPhoneNumber());\n        } else\n            phoneLocation.setVisibility(View.GONE);\n\n        // check rating\n        if (place.getRating() != null) {\n            ratingLocation.setText(\"Rating : \" + place.getRating());\n        } else\n            ratingLocation.setVisibility(View.GONE);\n\n\n        // check price level\n        if (place.getPriceLevel() != null) {\n            priceLevel.setText(\"Price level: \" + place.getPriceLevel());\n        } else\n            priceLevel.setVisibility(View.GONE);\n\n        informationLocation.setVisibility(LinearLayout.VISIBLE);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n        if (requestCode == RQCODE_FOR_SEARCH && resultCode == RESULT_OK) {\n            final Place place = Autocomplete.getPlaceFromIntent(data);\n\n            showPlaceInformation(place);\n\n            // listener cho button add favorite\n            btnAddFav.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    dbManager.FAVORITE_addPlace(new PlaceObject(place.getName(), place.getAddress(), place.getLatLng()));\n                    Toast.makeText(MapsActivity.this, \"Địa điểm đã được thêm vào danh sách\", Toast.LENGTH_SHORT).show();\n                }\n            });\n\n            // thêm vào lịch sử tìm kiếm\n            dbManager.HISTORY_addPlace(new PlaceObject(place.getName(), place.getAddress(), place.getLatLng()));\n\n            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(place.getLatLng(), DEFAULT_MAP_HEIGHT));\n            mMap.addMarker(new MarkerOptions().position(place.getLatLng()).title(place.getAddress()));\n        }\n\n        if (resultCode == RESULT_OK && requestCode == RQCODE_FROM_FAVORITE && data != null) {\n            navigation.setSelectedItemId(R.id.home);\n            int pos = data.getIntExtra(\"position\", 0) + 1;\n            final PlaceObject place = dbManager.FAVORITE_getPlace(pos);\n            btnAddFav.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    dbManager.FAVORITE_addPlace(place);\n                    Toast.makeText(MapsActivity.this, \"Địa điểm đã được thêm vào danh sách\", Toast.LENGTH_SHORT).show();\n                }\n            });\n            searchLocation.setText(place.getName());\n            mMap.clear();\n            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(place.getLatlong(), DEFAULT_MAP_HEIGHT));\n            mMap.addMarker(new MarkerOptions().position(place.getLatlong()).title(place.getAddress()));\n            nameLocation.setText(place.getName());\n            addressLocation.setText(place.getAddress());\n            // check phone number\n            phoneLocation.setVisibility(View.GONE);\n\n            // check rating\n            ratingLocation.setVisibility(View.GONE);\n\n            // check price level\n            priceLevel.setVisibility(View.GONE);\n            informationLocation.setVisibility(LinearLayout.VISIBLE);\n            isGoBack = true;\n        }\n\n        if (resultCode == RESULT_OK && requestCode == RQCODE_FROM_HISTORY && data != null) {\n            navigation.setSelectedItemId(R.id.home);\n            int pos = data.getIntExtra(\"position\", 0) + 1;\n            final PlaceObject place = dbManager.HISTORY_getPlace(pos);\n            btnAddFav.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    dbManager.FAVORITE_addPlace(place);\n                    Toast.makeText(MapsActivity.this, \"Địa điểm đã được thêm vào danh sách\", Toast.LENGTH_SHORT).show();\n                }\n            });\n            searchLocation.setText(place.getName());\n            mMap.clear();\n            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(place.getLatlong(), DEFAULT_MAP_HEIGHT));\n            mMap.addMarker(new MarkerOptions().position(place.getLatlong()).title(place.getAddress()));\n            nameLocation.setText(place.getName());\n            addressLocation.setText(place.getAddress());\n            // check phone number\n            phoneLocation.setVisibility(View.GONE);\n\n            // check rating\n            ratingLocation.setVisibility(View.GONE);\n\n            // check price level\n            priceLevel.setVisibility(View.GONE);\n            informationLocation.setVisibility(LinearLayout.VISIBLE);\n            isGoBack = true;\n        }\n\n        if (requestCode == RQCODE_FOR_FINDORI && resultCode == RESULT_OK) {\n            Place place = Autocomplete.getPlaceFromIntent(data);\n            edtOrigin.setText(place.getAddress());\n        }\n\n        if (requestCode == RQCODE_FOR_FINDDES && resultCode == RESULT_OK) {\n            Place place = Autocomplete.getPlaceFromIntent(data);\n            edtDestination.setText(place.getAddress());\n        }\n\n        if (requestCode == RQCODE_FOR_SEARCH_VIA_VOICE && resultCode == RESULT_OK) {\n            ArrayList<String> matches = data.getStringArrayListExtra(\"android.speech.extra.RESULTS\");\n            String result = matches.get(0);\n            GetPlaceFromText getPlace = new GetPlaceFromText(MapsActivity.this, result);\n            getPlace.execute();\n        }\n    }\n\n    @Override\n    public void getPlaceSuccess(final String[] result) {\n        if (result[0].equals(\"\") && result[1].equals(\"\") && result[4] == null) {\n            Toast.makeText(MapsActivity.this, \"Không tìm thấy kết quả phù hợp\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n        searchLocation.setText(result[0]);\n        nameLocation.setText(result[0]);\n        addressLocation.setText(result[1]);\n        // check phone number\n        phoneLocation.setVisibility(View.GONE);\n\n        // check rating\n        if (result[4] != null) {\n            ratingLocation.setText(\"Rating : \" + result[4]);\n            ratingLocation.setVisibility(View.VISIBLE);\n        } else\n            ratingLocation.setVisibility(View.GONE);\n\n        // check price level\n        priceLevel.setVisibility(View.GONE);\n        informationLocation.setVisibility(LinearLayout.VISIBLE);\n        btnAddFav.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                dbManager.FAVORITE_addPlace(new PlaceObject(result[0], result[1], new LatLng(Double.parseDouble(result[2]), Double.parseDouble(result[3]))));\n                Toast.makeText(MapsActivity.this, \"Địa điểm đã được thêm vào danh sách\", Toast.LENGTH_SHORT).show();\n            }\n        });\n        dbManager.HISTORY_addPlace(new PlaceObject(result[0], result[1], new LatLng(Double.parseDouble(result[2]), Double.parseDouble(result[3]))));\n        mMap.clear();\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(Double.parseDouble(result[2]), Double.parseDouble(result[3])), DEFAULT_MAP_HEIGHT));\n        mMap.addMarker(new MarkerOptions().position(new LatLng(Double.parseDouble(result[2]), Double.parseDouble(result[3]))).title(result[1]));\n\n    }\n\n    @Override\n    public void getDataSuccessful(ArrayList<Object> Countries, ArrayList<Object> Cities) {\n        nameCountry = (ArrayList<String>) Countries.get(0);\n        casesCountry = (ArrayList<Integer>) Countries.get(1);\n        deadCountry = (ArrayList<Integer>) Countries.get(2);\n        recoveredCountry = (ArrayList<Integer>) Countries.get(3);\n        latCountry = (ArrayList<String>) Countries.get(4);\n        lngCountry = (ArrayList<String>) Countries.get(5);\n        countryCode = (ArrayList<String>) Countries.get(6);\n        Log.d(\"Hash\", String.valueOf(countryCode));\n        isCheckingCorona = true;\n        mMap.clear();\n        final ArrayList<MarkerOptions> non_text = new ArrayList<>();\n        final ArrayList<MarkerOptions> with_text = new ArrayList<>();\n\n        View markerView = ((LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.covid_area_marker, null);\n        CircularTextView numTxt = markerView.findViewById(R.id.circularTextView);\n        MarkerOptions marker;\n        Log.d(\"Marker\", \"Create Countries markers\");\n        for (int i = 0; i < nameCountry.size(); ++i) {\n            numTxt.setText(String.valueOf(casesCountry.get(i)));\n            marker = new MarkerOptions()\n                    .position(new LatLng(Double.parseDouble(latCountry.get(i)), Double.parseDouble(lngCountry.get(i))))\n                    .title(nameCountry.get(i))\n                    .icon(BitmapDescriptorFactory.fromBitmap(MapsActivity.createDrawableFromView(this, markerView)));\n\n            with_text.add(marker);\n\n            numTxt.setText(\"\");\n            marker = new MarkerOptions()\n                    .position(new LatLng(Double.parseDouble(latCountry.get(i)), Double.parseDouble(lngCountry.get(i))))\n                    .title(nameCountry.get(i))\n                    .icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_16))\n                    .alpha(0.8f);\n            non_text.add(marker);\n        }\n\n        boolean isInit = true;\n        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(lastLocation.getLatitude(), lastLocation.getLongitude()), -DEFAULT_MAP_HEIGHT));\n        mMap.clear();\n        Log.d(\"Marker\", \"Add marker\");\n        for(int i = 0; i < non_text.size(); ++i) {\n            mMap.addMarker(non_text.get(i));\n        }\n        isInit = false;\n\n        hashByCountryCode = new HashMap<>();\n        nameCity = (ArrayList<String>) Cities.get(0);\n        casesCity = (ArrayList<Integer>) Cities.get(1);\n        deadCity = (ArrayList<Integer>) Cities.get(2);\n        recoveredCity = (ArrayList<Integer>) Cities.get(3);\n        latCity = (ArrayList<String>) Cities.get(4);\n        lngCity = (ArrayList<String>) Cities.get(5);\n        ArrayList<String> code_country = (ArrayList<String>) Cities.get(6);\n\n        final ArrayList<MarkerOptions> forCities = new ArrayList<>();\n\n        Log.d(\"Marker\", \"Create Cities markers\");\n        for (int i = 0; i < countryCode.size(); ++i) {\n            String code = countryCode.get(i);\n            ArrayList<Object> temp = hashByCountryCode.get(code);\n            if (temp != null) {\n                for(int j = 0; j < nameCity.size(); ++j) {\n                    if (code_country.get(j).equals(code)) {\n                        ((ArrayList<String>) (hashByCountryCode.get(code)).get(0)).add(nameCity.get(j));\n                        ((ArrayList<Integer>) (hashByCountryCode.get(code)).get(1)).add(casesCity.get(j));\n                        ((ArrayList<Integer>) (hashByCountryCode.get(code)).get(2)).add(deadCity.get(j));\n                        ((ArrayList<Integer>) (hashByCountryCode.get(code)).get(3)).add(recoveredCity.get(j));\n                    }\n                }\n            }\n            else {\n                ArrayList<Object> arr = new ArrayList<>();\n                ArrayList<String> name = new ArrayList<>();\n                ArrayList<Integer> cases = new ArrayList<>();\n                ArrayList<Integer> dead = new ArrayList<>();\n                ArrayList<Integer> recovered = new ArrayList<>();\n                for(int j = 0; j < nameCity.size(); ++j) {\n                    if (code_country.get(j).equals(code)) {\n                        name.add(nameCity.get(j));\n                        cases.add(casesCity.get(j));\n                        dead.add(deadCity.get(j));\n                        recovered.add(recoveredCity.get(j));\n                    }\n                }\n\n                arr.add(name.clone());\n                arr.add(cases.clone());\n                arr.add(dead.clone());\n                arr.add(recovered.clone());\n                hashByCountryCode.put(code, (ArrayList<Object>) arr.clone());\n            }\n            Log.d(\"Hash\", String.valueOf(hashByCountryCode.get(code)));\n        }\n        Log.d(\"Marker\", \"Complete markers all\");\n\n        progressDialog.dismiss();\n        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);\n\n        final boolean finalIsInit = isInit;\n        mMap.setOnCameraMoveListener(new GoogleMap.OnCameraMoveListener() {\n            boolean changeType = false;\n            @Override\n            public void onCameraMove() {\n                if (!finalIsInit) {\n                    CameraPosition cameraPosition = mMap.getCameraPosition();\n                    if(cameraPosition.zoom >= 3.5 && cameraPosition.zoom < 6 && changeType && isCheckingCorona) {\n                        mMap.clear();\n                        for (int i = 0; i < with_text.size(); ++i) {\n                            mMap.addMarker(with_text.get(i));\n                        }\n                        changeType = false;\n                    }\n                    else if (cameraPosition.zoom < 3.5 && !changeType && isCheckingCorona) {\n                        mMap.clear();\n                        for (int i = 0; i < non_text.size(); ++i) {\n                            mMap.addMarker(non_text.get(i));\n                        }\n                        changeType = true;\n                    }\n                }\n            }\n        });\n\n        mMap.setOnMarkerClickListener(this);\n    }\n\n    @Override\n    public boolean onMarkerClick(Marker marker) {\n        if(isCheckingCorona) {\n            BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(MapsActivity.this, R.style.BottomSheetDialogTheme);\n            View bottomSheetView = LayoutInflater.from(getApplicationContext()).inflate(R.layout.show_corona_info, null);\n            TextView tvName, tvCases, tvDead, tvRecovered;\n            tvName = bottomSheetView.findViewById(R.id.tvNameCountry);\n            tvCases = bottomSheetView.findViewById(R.id.tvCases);\n            tvDead = bottomSheetView.findViewById(R.id.tvDead);\n            tvRecovered = bottomSheetView.findViewById(R.id.tvRecovered);\n            ListView list_city = bottomSheetView.findViewById(R.id.list_city);\n            list_city.setVisibility(View.VISIBLE);\n            String Name = marker.getTitle();\n            for(int i = 0; i < nameCountry.size(); ++i) {\n                if (Name.equals(nameCountry.get(i))) {\n                    tvName.setText(nameCountry.get(i));\n                    tvCases.setText(\"Ca nhiễm: \" + casesCountry.get(i));\n                    tvDead.setText(\"Tử vong: \" + deadCountry.get(i));\n                    tvRecovered.setText(\"Hồi phục: \" + recoveredCountry.get(i));\n                    String code = countryCode.get(i);\n                    ArrayList<Object> info = hashByCountryCode.get(code);\n                    Object[] nameObj = (Object[]) ((ArrayList<String>) info.get(0)).toArray();\n                    if (nameObj.length == 0) {\n                        list_city.setVisibility(View.GONE);\n                        break;\n                    }\n                    Object[] casesObj = (Object[]) ((ArrayList<Integer>) info.get(1)).toArray();\n                    Object[] deadObj = (Object[]) ((ArrayList<Integer>) info.get(2)).toArray();\n                    Object[] recoveredObj = (Object[]) ((ArrayList<Integer>) info.get(3)).toArray();\n\n                    String[] name = Arrays.copyOf(nameObj, nameObj.length, String[].class);\n                    Integer[] cases = Arrays.copyOf(casesObj, casesObj.length, Integer[].class);\n                    Integer[] dead = Arrays.copyOf(deadObj, deadObj.length, Integer[].class);\n                    Integer[] recovered = Arrays.copyOf(recoveredObj, recoveredObj.length, Integer[].class);\n\n                    List<Map<String, String>> list_item = new ArrayList<>();\n                    for (int j = 0; j < name.length; ++j) {\n                        Map<String, String> item = new HashMap<>();\n                        item.put(\"name\", name[j]);\n                        item.put(\"info\", \"Ca nhiễm: \" + cases[j] + \" , Tử vong: \" + dead[j] + \" , Phục hồi: \" + recovered[j]);\n                        list_item.add(item);\n                    }\n                    list_city.setAdapter(new SimpleAdapter(this, list_item, simple_list_item_2,\n                            new String[] {\"name\", \"info\"}, new int[] {android.R.id.text1, android.R.id.text2}));\n                    break;\n                }\n            }\n            bottomSheetDialog.setContentView(bottomSheetView);\n            bottomSheetDialog.show();\n            return true;\n        }\n        return true;\n    }\n\n    @Override\n    public void onSensorChanged(SensorEvent event) {\n        if (curLocationMarker != null && mMap.getCameraPosition() != null) {\n            if (event.values[0] >= mMap.getCameraPosition().bearing)\n                curLocationMarker.setRotation(event.values[0] - mMap.getCameraPosition().bearing);\n            else curLocationMarker.setRotation(360.0f + event.values[0] - mMap.getCameraPosition().bearing);\n        }\n    }\n\n    @Override\n    public void onAccuracyChanged(Sensor sensor, int accuracy) {\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/map_application/MapsActivity.java	(revision fde605448875010d634f0e110d6a36a3177be25a)
+++ app/src/main/java/com/example/map_application/MapsActivity.java	(date 1606479410000)
@@ -6,7 +6,6 @@
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 import androidx.fragment.app.FragmentActivity;
-import androidx.recyclerview.widget.RecyclerView;
 
 import android.Manifest;
 import android.annotation.SuppressLint;
@@ -28,17 +27,12 @@
 import android.net.NetworkInfo;
 import android.os.Build;
 import android.os.Bundle;
-import android.util.ArrayMap;
 import android.util.DisplayMetrics;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
-import android.view.ViewGroup;
 import android.view.WindowManager;
-import android.widget.Adapter;
-import android.widget.ArrayAdapter;
-import android.widget.BaseAdapter;
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageView;
@@ -74,7 +68,6 @@
 import com.google.android.material.bottomsheet.BottomSheetDialog;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 
-import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
 import com.karumi.dexter.Dexter;
 import com.karumi.dexter.PermissionToken;
 import com.karumi.dexter.listener.PermissionDeniedResponse;
@@ -122,57 +115,59 @@
 
     private SensorManager sensorManager;
 
-    //find path
+    // Component cho chức năng tìm đường đi giữa 2 địa điểm
     private EditText edtOrigin, edtDestination;
     private TextView tvDuration, tvDistance;
     private LinearLayout llFindPath;
     private List<Polyline> polylinePaths = new ArrayList<>();
+    private boolean isFindingPath;
+    private String travelMode;
+    private ImageView ivSetOriginByCurrentPosition;
     private Button btnFindPath, btnFindFromCurrent,
             btnDrivingMode, btnWalkingMode, btnTransitMode;
-    private ImageView ivSetOriginByCurrentPosition;
+
     private PopupMenu popupMenu;
-    private boolean isFindingPath;
-    private String travelMode;
-    //---------
-    private Location lastLocation;
-    private LatLng defaultLocation;
-    private EditText searchLocation;
-    private ImageView btnCurLocation;
-    private FloatingActionButton btnShare;
 
-    // MapType Option
+    private Location lastLocation;  // Vị trị hiện tại được định vị
+    private LatLng defaultLocation; // Vị trí mặc định
+    private EditText searchLocation;    // EditText tìm địa điểm
+    private ImageView btnCurLocation;   // Button định vị vị trí hiện tại
+    private FloatingActionButton btnShare;  // Button chia sẽ vị trí hiện tại của bản
+
+    // Component cho chức năng chọn loại bản
     FloatingActionButton btnSelectType, btnSatellite, btnTerrain, btnDefault;
     boolean selectedMaptype;
 
     // Navigation Bar
     private BottomNavigationView navigation;
 
-    // Location information
+    // Component hiển thị thông tin của địa điểm
     private LinearLayout informationLocation;
     private TextView nameLocation, phoneLocation, ratingLocation, addressLocation, priceLevel;
     private Button btnAddFav;
-    private boolean isGoBack;
+    private boolean isGoBack;   // biến check khi nhấn back button
 
     // Data base
     private DBManager dbManager;
 
-    // Intro
+    // Giao diện loading
     private LinearLayout layoutIntro;
 
-    // Search via voice
+    // Tìm kiếm địa điểm bằng giọng
     private ImageView searchByVoice;
 
-    // Corona virus
+    // Component cho chức năng theo dõi thông tin Corona
     FloatingActionButton btnCorona;
     boolean isCheckingCorona;
-    ProgressDialog progressDialog;
+    ProgressDialog progressDialog;  // ProgressDialog hiển thị khi đang tải thông tin
+    // Dữ liệu theo cấp Quốc gia
     ArrayList<String> nameCountry;
     ArrayList<Integer> casesCountry;
     ArrayList<Integer> deadCountry;
     ArrayList<Integer> recoveredCountry;
     ArrayList<String> latCountry;
     ArrayList<String> lngCountry;
-
+    // Dữ liệu theo cấp Thành phố
     ArrayList<String> nameCity;
     ArrayList<Integer> casesCity;
     ArrayList<Integer> deadCity;
@@ -344,6 +339,12 @@
                         searchByVoice.setVisibility(View.VISIBLE);
                     }
 
+                    if (isCheckingCorona) {
+                        mMap.clear();
+                        getCurrentLocation();
+                        isCheckingCorona = false;
+                    }
+
                     llFindPath.setVisibility(View.GONE);
                     edtOrigin.setText("");
                     edtDestination.setText("");
@@ -359,14 +360,18 @@
                     btnTerrain.setTranslationY(0);
                     return true;
                 case R.id.find:
-                    //llFindPath.animate().translationY(llFindPath.getHeight());
                     //Hiện thanh tìm kiếm 2 địa điểm
                     llFindPath.setVisibility(View.VISIBLE);
-                    isCheckingCorona = false;
                     //Ẩn thanh search location
                     searchLocation.setVisibility(View.GONE);
                     searchByVoice.setVisibility(View.GONE);
                     isFindingPath = true;
+
+                    if (isCheckingCorona) {
+                        mMap.clear();
+                        isCheckingCorona = false;
+                    }
+
                     //Đưa button select map type xuống
                     btnSelectType.setTranslationY(llFindPath.getHeight());
                     btnDefault.setTranslationY(llFindPath.getHeight());
@@ -379,7 +384,10 @@
                     searchLocation.setVisibility(View.VISIBLE);
                     searchByVoice.setVisibility(View.VISIBLE);
                     llFindPath.setVisibility(View.GONE);
-                    isCheckingCorona = false;
+                    if (isCheckingCorona) {
+                        mMap.clear();
+                        isCheckingCorona = false;
+                    }
                     edtOrigin.setText("");
                     edtDestination.setText("");
                     tvDistance.setText(R.string.init_kilometer);
@@ -396,15 +404,23 @@
                     searchLocation.setText("");
                     return true;
                 case R.id.favorite:
-                    isFindingPath = false;
-                    isCheckingCorona = false;
+                    if (isCheckingCorona) {
+                        mMap.clear();
+                        getCurrentLocation();
+                        isCheckingCorona = false;
+                    }
+                    isFindingPath = false;
                     Intent intent_favorite = new Intent(MapsActivity.this, FavoriteActivity.class);
                     startActivityForResult(intent_favorite, RQCODE_FROM_FAVORITE);
                     searchLocation.setText("");
                     return true;
                 case R.id.history:
                     isFindingPath = false;
-                    isCheckingCorona = false;
+                    if (isCheckingCorona) {
+                        mMap.clear();
+                        getCurrentLocation();
+                        isCheckingCorona = false;
+                    }
                     Intent intent_history = new Intent(MapsActivity.this, HistoryActivity.class);
                     startActivityForResult(intent_history, RQCODE_FROM_HISTORY);
                     searchLocation.setText("");
@@ -931,20 +947,20 @@
         searchLocation.setText(place.getAddress());
         nameLocation.setText(place.getName());
         addressLocation.setText(place.getAddress());
-        // check phone number
+        // Hiển thị thông tin số điện thoại của địa
         if (place.getPhoneNumber() != null) {
             phoneLocation.setText("Phone number: " + place.getPhoneNumber());
         } else
             phoneLocation.setVisibility(View.GONE);
 
-        // check rating
+        // Hiển thị thông tin về rating
         if (place.getRating() != null) {
             ratingLocation.setText("Rating : " + place.getRating());
         } else
             ratingLocation.setVisibility(View.GONE);
 
 
-        // check price level
+        // Hiển thị thông tin về price
         if (place.getPriceLevel() != null) {
             priceLevel.setText("Price level: " + place.getPriceLevel());
         } else
@@ -961,7 +977,7 @@
 
             showPlaceInformation(place);
 
-            // listener cho button add favorite
+            // Button thêm địa điểm vào
             btnAddFav.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -970,7 +986,7 @@
                 }
             });
 
-            // thêm vào lịch sử tìm kiếm
+            // Thêm địa điểm đã tìm kiếm vào lịch sử
             dbManager.HISTORY_addPlace(new PlaceObject(place.getName(), place.getAddress(), place.getLatLng()));
 
             mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(place.getLatLng(), DEFAULT_MAP_HEIGHT));
@@ -994,13 +1010,8 @@
             mMap.addMarker(new MarkerOptions().position(place.getLatlong()).title(place.getAddress()));
             nameLocation.setText(place.getName());
             addressLocation.setText(place.getAddress());
-            // check phone number
             phoneLocation.setVisibility(View.GONE);
-
-            // check rating
             ratingLocation.setVisibility(View.GONE);
-
-            // check price level
             priceLevel.setVisibility(View.GONE);
             informationLocation.setVisibility(LinearLayout.VISIBLE);
             isGoBack = true;
@@ -1023,13 +1034,8 @@
             mMap.addMarker(new MarkerOptions().position(place.getLatlong()).title(place.getAddress()));
             nameLocation.setText(place.getName());
             addressLocation.setText(place.getAddress());
-            // check phone number
             phoneLocation.setVisibility(View.GONE);
-
-            // check rating
             ratingLocation.setVisibility(View.GONE);
-
-            // check price level
             priceLevel.setVisibility(View.GONE);
             informationLocation.setVisibility(LinearLayout.VISIBLE);
             isGoBack = true;
@@ -1062,17 +1068,12 @@
         searchLocation.setText(result[0]);
         nameLocation.setText(result[0]);
         addressLocation.setText(result[1]);
-        // check phone number
         phoneLocation.setVisibility(View.GONE);
-
-        // check rating
         if (result[4] != null) {
             ratingLocation.setText("Rating : " + result[4]);
             ratingLocation.setVisibility(View.VISIBLE);
         } else
             ratingLocation.setVisibility(View.GONE);
-
-        // check price level
         priceLevel.setVisibility(View.GONE);
         informationLocation.setVisibility(LinearLayout.VISIBLE);
         btnAddFav.setOnClickListener(new View.OnClickListener() {
@@ -1098,7 +1099,6 @@
         latCountry = (ArrayList<String>) Countries.get(4);
         lngCountry = (ArrayList<String>) Countries.get(5);
         countryCode = (ArrayList<String>) Countries.get(6);
-        Log.d("Hash", String.valueOf(countryCode));
         isCheckingCorona = true;
         mMap.clear();
         final ArrayList<MarkerOptions> non_text = new ArrayList<>();
@@ -1107,7 +1107,6 @@
         View markerView = ((LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE)).inflate(R.layout.covid_area_marker, null);
         CircularTextView numTxt = markerView.findViewById(R.id.circularTextView);
         MarkerOptions marker;
-        Log.d("Marker", "Create Countries markers");
         for (int i = 0; i < nameCountry.size(); ++i) {
             numTxt.setText(String.valueOf(casesCountry.get(i)));
             marker = new MarkerOptions()
@@ -1118,18 +1117,41 @@
             with_text.add(marker);
 
             numTxt.setText("");
+
+            int num_case = casesCountry.get(i);
             marker = new MarkerOptions()
                     .position(new LatLng(Double.parseDouble(latCountry.get(i)), Double.parseDouble(lngCountry.get(i))))
                     .title(nameCountry.get(i))
-                    .icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_16))
                     .alpha(0.8f);
-            non_text.add(marker);
+            if (num_case > 5000000) {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_36));
+                non_text.add(marker);
+            }
+            else if (num_case > 2000000) {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_32));
+                non_text.add(marker);
+            }
+            else if (num_case > 1000000) {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_28));
+                non_text.add(marker);
+            }
+            else if (num_case > 500000) {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_24));
+                non_text.add(marker);
+            }
+            else if (num_case > 200000) {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_20));
+                non_text.add(marker);
+            }
+            else {
+                marker.icon(BitmapDescriptorFactory.fromResource(R.drawable.circle_16));
+                non_text.add(marker);
+            }
         }
 
         boolean isInit = true;
-        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(lastLocation.getLatitude(), lastLocation.getLongitude()), -DEFAULT_MAP_HEIGHT));
+        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(lastLocation.getLatitude(), lastLocation.getLongitude()), 3.0f));
         mMap.clear();
-        Log.d("Marker", "Add marker");
         for(int i = 0; i < non_text.size(); ++i) {
             mMap.addMarker(non_text.get(i));
         }
@@ -1146,7 +1168,6 @@
 
         final ArrayList<MarkerOptions> forCities = new ArrayList<>();
 
-        Log.d("Marker", "Create Cities markers");
         for (int i = 0; i < countryCode.size(); ++i) {
             String code = countryCode.get(i);
             ArrayList<Object> temp = hashByCountryCode.get(code);
@@ -1181,9 +1202,7 @@
                 arr.add(recovered.clone());
                 hashByCountryCode.put(code, (ArrayList<Object>) arr.clone());
             }
-            Log.d("Hash", String.valueOf(hashByCountryCode.get(code)));
         }
-        Log.d("Marker", "Complete markers all");
 
         progressDialog.dismiss();
         getWindow().clearFlags(WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE);
@@ -1267,7 +1286,7 @@
             bottomSheetDialog.show();
             return true;
         }
-        return true;
+        return false;
     }
 
     @Override
Index: app/src/main/res/layout/progress_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:gravity=\"center\">\n    <LinearLayout\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:orientation=\"vertical\"\n        android:gravity=\"center\"\n        android:padding=\"25dp\"\n        android:background=\"@drawable/progress_dialog_background\">\n\n        <ProgressBar\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:theme=\"@style/progressBarOrange\"/>\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Đang tải dữ liệu Covid-19 ...\"\n            android:textSize=\"20dp\"\n            android:layout_marginTop=\"20dp\" />\n    </LinearLayout>\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/progress_dialog.xml	(revision fde605448875010d634f0e110d6a36a3177be25a)
+++ app/src/main/res/layout/progress_dialog.xml	(date 1606474756000)
@@ -15,11 +15,12 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:theme="@style/progressBarOrange"/>
+
         <TextView
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
-            android:text="Đang tải dữ liệu Covid-19 ..."
-            android:textSize="20dp"
-            android:layout_marginTop="20dp" />
+            android:layout_marginTop="20dp"
+            android:text="Đang tải ..."
+            android:textSize="20dp" />
     </LinearLayout>
 </RelativeLayout>
\ No newline at end of file
